### This file was generated by Nexus Schema
### Do not make changes to this file directly

type AuthPayload {
  accessToken: String
  user: User
}

type InvalidUser {
  message: String!
}

union LoginResult = AuthPayload | InvalidUser

type Mutation {
  createDraft(content: String, title: String!): Post
  deletePost(id: Int!): Post
  login(email: String!, password: String!): LoginResult
  publish(id: Int): Post
  signup(email: String!, name: String, password: String!): SignupResult
}

type Post {
  author: User
  content: String
  id: Int!
  published: Boolean!
  title: String!
}

type Query {
  me: User
  post(id: Int!): Post
  posts: [Post]!
}

union SignupResult = AuthPayload | UserAlreadyExists

type Subscription {
  latestPost: Post
}

type User {
  email: String!
  id: Int!
  name: String
  posts: [Post]!
}

type UserAlreadyExists {
  message: String!
}
